import queue
class graph:
    def __init__(self,nVertices):
        self.nVertices=nVertices
        self.adjmatrix=[[0 for i in range(nVertices)] for j in range (nVertices)] #this creates a 0 by 0 matrix
    
    def addedge(self,v1,v2):
        self.adjmatrix[v1][v2]=1
        self.adjmatrix[v2][v1]=1
        
    def bfs(self):
        q=queue.Queue()
        q.put(0)
        visited=[False for i in range(self.nVertices)]
        while not q.empty():
            u=q.get()
            print(u,end=' ')
            visited[u] = True
            for i in range(self.nVertices):
                if self.adjmatrix[u][i]==1 and visited[i] is False:
                    q.put(i)
                    visited[i]=True
        
l = [int(x) for x in input().strip().split()]
vertices = l[0]
edges = l[1]

g = graph(vertices)

for i in range(edges):
    edgPair = [int(x) for x in input().strip().split()]
    g.addedge(edgPair[0], edgPair[1])
    
g.bfs()
